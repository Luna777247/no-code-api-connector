{"timestamp":"2025-10-25T05:00:02.729966Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-25T05:00:02.732298Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/schedule_dag_generator.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-25T05:00:05.747449Z","level":"info","event":"[DAG Generator] Invalid connection ID format: conn_1760900635551_e1ik9kycx, skipping schedule","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:06.054873Z","level":"info","event":"[DAG Generator] Connection not found: 68fb174656bf68b61b0d9dd5","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:06.361383Z","level":"info","event":"[DAG Generator] Connection not found: 68fb174756bf68b61b0d9dd7","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:07.144756Z","level":"info","event":"[DAG Generator] Invalid connection ID format: test_conn_aot, skipping schedule","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:07.145383Z","level":"info","event":"[DAG Generator] Invalid connection ID format: test_conn_aot, skipping schedule","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:10.356546Z","level":"info","event":"[DAG Generator] Generated 4 DAGs from schedules","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:11.327518Z","level":"warning","event":"The `airflow.operators.python.PythonOperator` attribute is deprecated. Please use `'airflow.providers.standard.operators.python.PythonOperator'`.","category":"DeprecatedImportWarning","filename":"/opt/airflow/dags/schedule_dag_generator.py","lineno":7,"logger":"py.warnings"}
{"timestamp":"2025-10-25T05:00:11.396884Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:11.397663Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:11.398480Z","level":"info","event":"Current task name:execute_api","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:11.399318Z","level":"info","event":"Dag name:api_schedule_68fc4c824a46b382e1020b43","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:11.402986Z","level":"info","event":"[Airflow] Executing API call for schedule: 68fc4c824a46b382e1020b43","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:24.935109Z","level":"info","event":"[Airflow] API call completed: success","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:25.157046Z","level":"info","event":"Done. Returned value was: {'scheduleId': '68fc4c824a46b382e1020b43', 'connectionId': '68fc4c734a46b382e1020b42', 'status': 'success', 'statusCode': 200, 'duration': 0, 'recordsProcessed': 0, 'executedAt': '2025-10-25T05:00:12.302977', 'triggeredBy': 'airflow_scheduler', 'responseSize': 387319, '_id': '68fc595c7337cf328d06b61c'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator","filename":"python.py","lineno":218}
{"timestamp":"2025-10-25T05:00:25.159150Z","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019a19bc-e4ca-798d-a8eb-8dce3ea778bc'), task_id='execute_api', dag_id='api_schedule_68fc4c824a46b382e1020b43', run_id='scheduled__2025-10-25T05:00:00+00:00', try_number=1, dag_version_id=UUID('019a199c-5276-7c81-89a0-934f92dc7863'), map_index=-1, hostname='b22b62853d56', context_carrier={}, task=<Task(PythonOperator): execute_api>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=3, start_date=datetime.datetime(2025, 10, 25, 5, 0, 1, 484027, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task","filename":"task_runner.py","lineno":1352}
{"timestamp":"2025-10-25T05:00:25.263558Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:25.264536Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-25T05:00:25.265617Z","level":"info","event":"Task operator:<Task(PythonOperator): execute_api>","logger":"task.stdout"}
